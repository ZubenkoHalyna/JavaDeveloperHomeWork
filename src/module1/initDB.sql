DROP TABLE IF EXISTS developerSkills;
DROP TABLE IF EXISTS skills;
DROP TABLE IF EXISTS developers;
DROP TABLE IF EXISTS projects;
DROP TABLE IF EXISTS companies;
DROP TABLE IF EXISTS customers;

CREATE TABLE IF NOT EXISTS skills (
  id INT NOT NULL AUTO_INCREMENT,
  name VARCHAR(40) NOT NULL UNIQUE,
  PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS companies (
  id INT NOT NULL AUTO_INCREMENT,
  name VARCHAR(40) NOT NULL,
  PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS customers (
  id INT NOT NULL AUTO_INCREMENT,
  name VARCHAR(40) NOT NULL,
  PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS projects (
  id INT NOT NULL AUTO_INCREMENT,
  name VARCHAR(40) NOT NULL,
  companyId INT,
  customerId INT,
  FOREIGN KEY (companyId) REFERENCES companies(id)
    ON UPDATE CASCADE ON DELETE SET NULL,
  FOREIGN KEY (customerId) REFERENCES customers(id)
    ON UPDATE CASCADE ON DELETE SET NULL,
  PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS developers (
  id INT NOT NULL AUTO_INCREMENT,
  firstName VARCHAR(40) NOT NULL,
  lastName VARCHAR(40) NOT NULL,
  projectId INT,
  FOREIGN KEY (projectId) REFERENCES projects(id)
    ON UPDATE CASCADE ON DELETE SET NULL,
  PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS developerSkills (
  developerId INT,
  skillId INT,
  FOREIGN KEY (developerId) REFERENCES developers(id)
    ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (skillId) REFERENCES skills(id)
    ON UPDATE CASCADE ON DELETE CASCADE,
  PRIMARY KEY (developerId,skillId)
);